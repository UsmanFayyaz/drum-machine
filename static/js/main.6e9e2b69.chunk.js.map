{"version":3,"sources":["sounds/Tamborine2.wav","sounds/almost-the-doors.wav","sounds/christmas_rhodes.wav","sounds/Drop Effect 3.wav","sounds/epiano-two-chords.wav","sounds/Flexi up 1.wav","sounds/GunCock01.wav","sounds/RAIN.wav","sounds/Startup Effect.wav","components/button.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","className","onClick","this","props","sound","id","value","React","Component","DrumMachine","state","title","isOn","audio","playSound","bind","handleKeys","power","setState","pause","temp","Audio","forQ","play","forW","forE","forA","forS","forD","forZ","forX","forC","event","currentTarget","key","isEmpty","on","onkeypress","rel","href","style","backgroundColor","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e9e2b69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Tamborine2.76bb0918.wav\";","module.exports = __webpack_public_path__ + \"static/media/almost-the-doors.37442c17.wav\";","module.exports = __webpack_public_path__ + \"static/media/christmas_rhodes.0924284d.wav\";","module.exports = __webpack_public_path__ + \"static/media/Drop Effect 3.ba2e05f4.wav\";","module.exports = __webpack_public_path__ + \"static/media/epiano-two-chords.f139f2ea.wav\";","module.exports = __webpack_public_path__ + \"static/media/Flexi up 1.520de029.wav\";","module.exports = __webpack_public_path__ + \"static/media/GunCock01.cba1eb4d.wav\";","module.exports = __webpack_public_path__ + \"static/media/RAIN.fabf7d01.wav\";","module.exports = __webpack_public_path__ + \"static/media/Startup Effect.301d901e.wav\";","import React from \"react\";\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <button className=\"drum-pad\" onClick={this.props.sound} id={this.props.value}>{this.props.value}</button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;","import React from 'react';\nimport Button from './components/button';\nimport forQ from './sounds/Tamborine2.wav';\nimport forW from './sounds/almost-the-doors.wav';\nimport forE from './sounds/christmas_rhodes.wav';\nimport forA from './sounds/Drop Effect 3.wav';\nimport forS from './sounds/epiano-two-chords.wav';\nimport forD from './sounds/Flexi up 1.wav';\nimport forZ from './sounds/GunCock01.wav';\nimport forX from './sounds/RAIN.wav';\nimport forC from './sounds/Startup Effect.wav';\nimport './App.css';\n\nclass DrumMachine extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      isOn: true,\n      audio: null\n    }\n    this.playSound = this.playSound.bind(this);\n    this.handleKeys = this.handleKeys.bind(this);\n    this.sound = this.sound.bind(this);\n    this.power = this.power.bind(this);\n  }\n\n  power() {\n    var temp = this.state.isOn;\n\n    if (temp) {\n      this.setState({\n        isOn: false,\n        title: \"\"\n      })\n      if (this.state.audio !== null) {\n        this.state.audio.pause();\n      }\n    } else {\n      this.setState({\n        isOn: true\n      })\n    }\n  }\n\n  sound(temp) {\n    switch (temp) {\n      case \"q\":\n      case \"Q\":\n        if (this.state.audio !== null) {\n          this.state.audio.pause();\n        }\n        this.setState({\n          title: \"Tamborine\",\n          audio: new Audio(forQ)\n        })\n        this.state.audio.play();\n        break;\n\n      case \"w\":\n      case \"W\":\n        if (this.state.audio !== null) {\n          this.state.audio.pause();\n        }\n        this.setState({\n          title: \"Almost The Doors\",\n          audio: new Audio(forW)\n        })\n        this.state.audio.play();\n        break;\n\n      case \"e\":\n      case \"E\":\n          if (this.state.audio !== null) {\n            this.state.audio.pause();\n          }\n          this.setState({\n            title: \"Christmas Rhodes\",\n            audio: new Audio(forE)\n          })\n          this.state.audio.play();\n          break;\n\n      case \"a\":\n      case \"A\":\n          if (this.state.audio !== null) {\n            this.state.audio.pause();\n          }\n          this.setState({\n            title: \"Drop Effect\",\n            audio: new Audio(forA)\n          })\n          this.state.audio.play();\n          break;\n\n      case \"s\":\n      case \"S\":\n          if (this.state.audio !== null) {\n            this.state.audio.pause();\n          }\n          this.setState({\n            title: \"Epiano Two chords\",\n            audio: new Audio(forS)\n          })\n          this.state.audio.play();\n          break;\n\n      case \"d\":\n      case \"D\":\n          if (this.state.audio !== null) {\n            this.state.audio.pause();\n          }\n          this.setState({\n            title: \"Flexi Up\",\n            audio: new Audio(forD)\n          })\n          this.state.audio.play();\n          break;\n\n      case \"z\":\n      case \"Z\":\n          if (this.state.audio !== null) {\n            this.state.audio.pause();\n          }\n          this.setState({\n            title: \"Gun Cock\",\n            audio: new Audio(forZ)\n          })\n          this.state.audio.play();\n          break;\n\n      case \"x\":\n      case \"X\":\n          if (this.state.audio !== null) {\n            this.state.audio.pause();\n          }\n          this.setState({\n            title: \"Rain\",\n            audio: new Audio(forX)\n          })\n          this.state.audio.play();\n          break;\n\n      case \"c\":\n      case \"C\":\n          if (this.state.audio !== null) {\n            this.state.audio.pause();\n          }\n          this.setState({\n            title: \"Startup Effect\",\n            audio: new Audio(forC)\n          })\n          this.state.audio.play();\n          break;\n\n      default:\n        break;\n    }\n  }\n\n  playSound(event) {\n    if (this.state.isOn) {\n      this.sound(event.currentTarget.id);\n    }\n  }\n\n  handleKeys(event) {\n    if (this.state.isOn) {\n      this.sound(event.key);\n    }\n  }\n\n  render() {\n    const isEmpty = this.state.title;\n    const on = this.state.isOn;\n    onkeypress = this.handleKeys;\n    return (\n      <div id=\"drum-machine\">\n        <div id=\"display-container\">\n          <h2 id=\"display\">{isEmpty ? this.state.title : <br />}</h2>\n        </div>\n        <link rel=\"prefetch\" href=\"./sounds/Tamborine2.wav\"></link>\n        <Button value=\"Q\" sound={this.playSound} />\n        <Button value=\"W\" sound={this.playSound} />\n        <Button value=\"E\" sound={this.playSound} /><br />\n        <Button value=\"A\" sound={this.playSound} />\n        <Button value=\"S\" sound={this.playSound} />\n        <Button value=\"D\" sound={this.playSound} /><br />\n        <Button value=\"Z\" sound={this.playSound} />\n        <Button value=\"X\" sound={this.playSound} />\n        <Button value=\"C\" sound={this.playSound} />\n        <h3>{(on) ? \"Power On\" : \"Power Off\"}</h3>\n        <div id=\"toggleButton\" onClick={this.power} style={(on) ? { backgroundColor: 'green' } : { backgroundColor: 'white' }}></div>\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DrumMachine />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}